/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>
#include <cstrike>
#include <smlib>
#include <sdkhooks>
#include <colors>
#include <adminmenu>

new Handle:hAdminMenu = INVALID_HANDLE;
Handle CountdownTimer;
bool:CountdownActive = false;
bool:ffAktif = false;
ConVar g_cvFriendlyFire;
new bool:komutcuKontrol[65];

public Plugin:myinfo = 
{
	name = "CT Menu",
	author = "ImPossibLe`",
	description = "Jailbreak Modunda CT Komutu Kolaylaştırır",
	version = "1.0"
}

public OnPluginStart()
{
	RegConsoleCmd("sm_w", Command_W);
	RegConsoleCmd("sm_ctmenu", TRCT);
	HookEvent("round_end", ElSonu);
	HookEvent("round_start", Event_Round_Start);
	g_cvFriendlyFire = FindConVar("mp_teammates_are_enemies");
}

public OnMapStart()
{
	decl String:mapName[64];
	GetCurrentMap(mapName, sizeof(mapName));
	
	if(!((StrContains(mapName, "jb_", false) != -1) || (StrContains(mapName, "jail_", false)!= -1)))
	{
		SetFailState("Bu plugin sadece jail maplarinda calismaktadir..");
	}
}

public Action:Event_Round_Start(Handle:event, const String:name[], bool:dontBroadcast) 
{
	ServerCommand("sv_gravity 800");
	ServerCommand("sv_airaccelerate 99999");
	ServerCommand("sm_parachute_enabled 1");
	ServerCommand("sv_infinite_ammo 0")
	ServerCommand("mp_teammates_are_enemies 0");
	ServerCommand("mp_friendlyfire 0");
	ServerCommand("sm_hosties_noblock_enable 1");
	ServerCommand("mp_solid_teammates 0");
	ServerCommand("sm_strip @t");
	ServerCommand("sv_infinite_ammo 0");
	new i;
	for (i=1; i <= MaxClients; i++) 
	{
		if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   
		{
			SDKUnhook(i, SDKHook_Touch, OnTouch);
			SetEntPropFloat(i, Prop_Data, "m_flLaggedMovementValue", 1.0);
			SDKUnhook(i, SDKHook_SetTransmit, Hook_SetTransmit);
			new can = (GetClientHealth(i), 100);
			SetEntityHealth(i, can);
			SetEntityRenderColor(i, 255, 255, 255, 255);
			if(komutcuKontrol[i] != false)
				komutcuKontrol[i] = false;
		}
	}
}

public Action:Command_W(client, args)
{
	int i = 1;
	int fail = 0;
	while (i<=MaxClients)
	{
		if(komutcuKontrol[i] == true)
			fail = 1;
		i++;
	}
	if(fail == 0)
	{
		komutcuKontrol[client] = true;
	}
}

public Action:ElSonu(Handle:event, const String:name[], bool:dontBroadcast)
{
	if(ffAktif || CountdownActive)
	{
		CloseHandle(CountdownTimer);
		CountdownTimer = null;
		g_cvFriendlyFire.IntValue = 0;
		ffAktif = false;
		CountdownActive = false;
		ServerCommand("sm_cvar mp_teammates_are_enemies 0")
	}
	ServerCommand("sv_gravity 800");
	ServerCommand("sv_airaccelerate 99999");
	ServerCommand("sm_parachute_enabled 1");
	ServerCommand("sv_infinite_ammo 0");
	ServerCommand("mp_teammates_are_enemies 0");
	ServerCommand("mp_friendlyfire 0");
	ServerCommand("sm_hosties_noblock_enable 1");
	ServerCommand("mp_solid_teammates 0");
	ServerCommand("sm_freeze @t 0");
	ServerCommand("sm_strip @t");
	ServerCommand("sv_infinite_ammo 0");
	
	for (int i = 1; i <= MaxClients; i++)
	{
		if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
			SDKUnhook(i, SDKHook_Touch, OnTouch);
			SetEntPropFloat(i, Prop_Data, "m_flLaggedMovementValue", 1.0);
			SDKUnhook(i, SDKHook_SetTransmit, Hook_SetTransmit);
			new can = (GetClientHealth(i), 100);
			SetEntityHealth(i, can);
			SetEntityRenderColor(i, 255, 255, 255, 255);
		}
	}
}
public Action:TRCT(client,args)
{
	
	if(GetClientTeam(client) == 3 && (komutcuKontrol[client] == true))
	{
		CTMenu(client);
	}
	else
	{
		CPrintToChat(client, " \x02[Only Fun] \x04Bu komut sadece KOMUTÇU'lar içindir.");
		return;
	}
}

public Action:CTMenu(clientId) 
{
	new Handle:menu = CreateMenu(CTMenuHandler);
	SetMenuTitle(menu, "Only Fun CTMenu");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "CT God");
	AddMenuItem(menu, "option2", opcionmenu);	
	
	Format(opcionmenu, 124, "Tüm Ayarlari Sıfırla");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Oyun Menüsü");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "İşlem Menüsü");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "Respawn Menüsü");
	AddMenuItem(menu, "option6", opcionmenu);
	
	Format(opcionmenu, 124, "Glow Menüsü");
	AddMenuItem(menu, "option7", opcionmenu);
	
	//Format(opcionmenu, 124, "Enfeksiyon (Yapim Asamasindi)");
	//AddMenuItem(menu, "option8", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public CTMenuHandler(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option1") == 0 ) 
		{
			{
				CTMenu(client);
			}
		}
		
		else if ( strcmp(info,"option2") == 0 ) 
		{
			{
				
				for (int i = 1; i <= MaxClients; i++) 
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : CT'ye GOD verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							ServerCommand("sm_god @ct 1");
							//new can = (GetClientHealth(i), 25000);
							//SetEntityHealth(i, can);
							
						}
						
					}
				}
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				ServerCommand("sv_gravity 800");
				ServerCommand("sv_airaccelerate 99999");
				ServerCommand("sm_parachute_enabled 1");
				ServerCommand("sv_infinite_ammo 0")
				ServerCommand("mp_teammates_are_enemies 0");
				ServerCommand("mp_friendlyfire 0");
				ServerCommand("sm_hosties_noblock_enable 1");
				ServerCommand("mp_solid_teammates 0");
				ServerCommand("sm_freeze @t 0");
				ServerCommand("sm_strip @t");
				ServerCommand("sv_infinite_ammo 0");
				
				for (int i = 1; i <= MaxClients; i++) 
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						SDKUnhook(i, SDKHook_Touch, OnTouch);
						SetEntPropFloat(i, Prop_Data, "m_flLaggedMovementValue", 1.0);
						CPrintToChat(i," \x02[Only Fun] \x04%s : Tüm ayarlar sıfırlandı.",isim); 
						SDKUnhook(i, SDKHook_SetTransmit, Hook_SetTransmit);
						new can = (GetClientHealth(i), 100);
						SetEntityHealth(i, can);
						SetEntityRenderColor(i, 255, 255, 255, 255);
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				OyunMenu(client);
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				islem(client);
				
				
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				RevAk0(client);
			}
		}
		else if ( strcmp(info,"option7") == 0 ) 
		{
			{
				GlowMenu(client);
			}
		}
		
	}
}


public Action:OyunMenu(clientId) 
{
	new Handle:menu = CreateMenu(OMenuDevam);
	SetMenuTitle(menu, "Only Fun OyunMenu");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Kuş Avı");
	AddMenuItem(menu, "option2", opcionmenu);	
	
	Format(opcionmenu, 124, "Zombi Mod");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "KamiKZ");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "Aref");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "Bombacı Mülayim");
	AddMenuItem(menu, "option6", opcionmenu);
	
	Format(opcionmenu, 124, "Körebe");
	AddMenuItem(menu, "option7", opcionmenu);
	
	Format(opcionmenu, 124, "FF Oyunu");
	AddMenuItem(menu, "option8", opcionmenu);
	
	Format(opcionmenu, 124, "Çatışma Oyunu");
	AddMenuItem(menu, "option10", opcionmenu);
	
	Format(opcionmenu, 124, "Yakala Mod (BETA)");
	AddMenuItem(menu, "option9", opcionmenu);
	
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public OMenuDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option1") == 0 ) 
		{
			{
				CTMenu(client);
			}
		}
		
		else if ( strcmp(info,"option2") == 0 ) 
		{
			{
				ServerCommand("sv_gravity 200");
				KusAvi(client);
				for (int i = 1; i <= MaxClients; i++) 
				{ 
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 25000);
							SetEntityHealth(i, can);
							
						} else {
							SetEntityRenderColor(i, 0, 0, 255, 255);
							new can = (GetClientHealth(i) , 1);
							SetEntityHealth(i, can);
						}
						CPrintToChat(i," \x02[Only Fun] \x04%s : Kuş Avı Açıldı.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(client) == 3)
						{
							Zombi(client);
							
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				ServerCommand("sv_airaccelerate -50");
				ServerCommand("sm_parachute_enabled 0");
				for (int i = 1; i <= MaxClients; i++)
				{ 
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i), 25000);
							SetEntityHealth(i, can);
							
						}
						CPrintToChat(i," \x02[Only Fun] \x04%s : KamiKZ Oyunu Açıldı.",isim);
					}
				}
				
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				ServerCommand("sv_infinite_ammo 1");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Aref Oyunu Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i), 25000);
							SetEntityHealth(i, can);
							
						} else {
							SDKHook(i, SDKHook_SetTransmit, Hook_SetTransmit);
							SetEntityRenderColor(i, 255, 255, 255, 20);
							GivePlayerItem(i, "weapon_deagle");
							Client_GiveWeaponAndAmmo(i, "weapon_deagle", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				ServerCommand("sv_infinite_ammo 1")
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Bombacı Mülayim Oyunu Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i), 25000);
							SetEntityHealth(i, can);	
						}
						BombaciCan(client);
					}
				}
			}
		}
		else if ( strcmp(info,"option7") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Körebe Oyunu Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							SDKHook(i, SDKHook_SetTransmit, Hook_SetTransmit);
							SetEntityRenderColor(i, 255, 255, 255, 0);
							KorebeCan(client);	
						} else {
							ZombiSilah2(i);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option8") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i), 25000);
							SetEntityHealth(i, can);	
							ff(client);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option9") == 0 ) 
		{
			{
				CPrintToChatAll(" \x02[Only Fun] \x04%s : Yakala Mod Açıldı.",isim);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							SetEntPropFloat(i, Prop_Data, "m_flLaggedMovementValue", 3.0);
							SDKHook(i, SDKHook_Touch, OnTouch);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option10") == 0 ) 
		{
			{
				Catismash(client);
				CPrintToChatAll(" \x02[Only Fun] \x04%s : Çatışma Oyunu Açıldı.",isim);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						ZombiSilah2(i)
					}
				}
			}
		}
	}
} 

public Action:KusAvi(clientId) 
{
	new Handle:menu = CreateMenu(KusDevam);
	SetMenuTitle(menu, "KusAvi Silah Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Verilecek Silah: Awp");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: Otomatik Awp");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: Scout");
	AddMenuItem(menu, "option4", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public KusDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							GivePlayerItem(i, "weapon_awp");
							Client_GiveWeaponAndAmmo(i, "weapon_awp", _, 0, _, 30);
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							GivePlayerItem(i, "weapon_scar20");
							Client_GiveWeaponAndAmmo(i, "weapon_scar20", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							GivePlayerItem(i, "weapon_ssg08");
							Client_GiveWeaponAndAmmo(i, "weapon_ssg08", _, 0, _, 30); 
						}
					}
				}
			}
		}
	}
} 

public Action:Zombi(clientId) 
{
	new Handle:menu = CreateMenu(ZombiDevam);
	SetMenuTitle(menu, "Zombi HP Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "5000 HP");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "6000 HP");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "7000 HP");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "8000 HP");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "9000 HP");
	AddMenuItem(menu, "option6", opcionmenu);
	
	Format(opcionmenu, 124, "10000 HP");
	AddMenuItem(menu, "option7", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public ZombiDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Zombi Mod AKTİF GADRIYANLAR'a 5000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 5000);
							SetEntityHealth(i, can);
						} else {
							ZombiSilah2(i)
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Zombi Mod AKTİF GADRIYANLAR'a 6000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 6000);
							SetEntityHealth(i, can);
						} else {
							ZombiSilah2(i)
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Zombi Mod AKTİF GADRIYANLAR'a 7000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 7000);
							SetEntityHealth(i, can);
						} else {
							ZombiSilah2(i)
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Zombi Mod AKTİF GADRIYANLAR'a 8000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 8000);
							SetEntityHealth(i, can);
						} else {
							ZombiSilah2(i)
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Zombi Mod AKTİF GADRIYANLAR'a 9000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 9000);
							SetEntityHealth(i, can);
						} else {
							ZombiSilah2(i)
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option7") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Zombi Mod AKTİF GADRIYANLAR'a 10000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);
							new can = (GetClientHealth(i) , 10000);
							SetEntityHealth(i, can);
						} else {
							ZombiSilah2(i)
						}
					}
				}
			}
		}
		
	}
} 

public Action:ZombiSilah(clientId) 
{
	new Handle:menu = CreateMenu(ZombiSilahDevam);
	SetMenuTitle(menu, "Mahkum Silah Seçme Menüsü");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Verilecek Silah: M4A4");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: M4A1-S");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: AK47");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: AUG");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: AWP");
	AddMenuItem(menu, "option6", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: Otomatik AWP");
	AddMenuItem(menu, "option7", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: Nova");
	AddMenuItem(menu, "option8", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public ZombiSilahDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_m4a1");
					Client_GiveWeaponAndAmmo(client, "weapon_m4a1", _, 0, _, 30);
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_m4a1_silencer");
					Client_GiveWeaponAndAmmo(client, "weapon_m4a1_silencer", _, 0, _, 30);
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_ak47");
					Client_GiveWeaponAndAmmo(client, "weapon_ak47",_, 0, _, 30); 
				}
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_aug");
					Client_GiveWeaponAndAmmo(client, "weapon_aug", _, 0, _, 30); 
				}
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_awp");
					Client_GiveWeaponAndAmmo(client, "weapon_awp", _, 0, _, 30);
				}
			}
		}
		else if ( strcmp(info,"option7") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_scar20");
					Client_GiveWeaponAndAmmo(client, "weapon_scar20", _, 0, _, 30); 
				}
			}
		}
		else if ( strcmp(info,"option8") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_nova");
					Client_GiveWeaponAndAmmo(client, "weapon_nova", _, 0, _, 30);
				}
			}
		}
	}	
}

public Action:ZombiSilah2(clientId) 
{
	new Handle:menu = CreateMenu(ZombiSilahDevam2);
	SetMenuTitle(menu, "Mahkum Silah Seçme Menüsü");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Verilecek Silah: USP");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: FIVESEVEN");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: TEC9");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Silah: DEAGLE");
	AddMenuItem(menu, "option5", opcionmenu);
	
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public ZombiSilahDevam2(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_usp_silencer");
					Client_GiveWeaponAndAmmo(client, "weapon_usp_silencer", _, 0, _, 30);
					ZombiSilah(client);
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_fiveseven");
					Client_GiveWeaponAndAmmo(client, "weapon_fiveseven", _, 0, _, 30);
					ZombiSilah(client);
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_tec9");
					Client_GiveWeaponAndAmmo(client, "weapon_tec9", _, 0, _, 30); 
					ZombiSilah(client);
				}
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				if(GetClientTeam(client) == 2)
				{
					GivePlayerItem(client, "weapon_deagle");
					Client_GiveWeaponAndAmmo(client, "weapon_deagle", _, 0, _, 30);
					ZombiSilah(client);
				}
			}
		}
	}	
}	

public Action:BombaciCan(clientId) 
{
	new Handle:menu = CreateMenu(BombaciDevam);
	SetMenuTitle(menu, "Bombacı Mülayim Mahkum HP");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Verilecek Can: 150 HP");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Can: 300 HP");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Can: 500 HP");
	AddMenuItem(menu, "option4", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public BombaciDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							GivePlayerItem(i, "weapon_hegrenade");
						} else {
							new can = (GetClientHealth(i) , 150);
							SetEntityHealth(i, can);
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							GivePlayerItem(i, "weapon_hegrenade");
						} else {
							new can = (GetClientHealth(i) , 300);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							GivePlayerItem(i, "weapon_hegrenade");
						} else {
							new can = (GetClientHealth(i) , 500);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
		
		
	}	
}

public Action:KorebeCan(clientId) 
{
	new Handle:menu = CreateMenu(KorebeDevam);
	SetMenuTitle(menu, "Körebe KOMUTÇU HP Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Verilecek Can: 150 HP");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Can: 300 HP");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Verilecek Can: 500 HP");
	AddMenuItem(menu, "option4", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public KorebeDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 150);
							SetEntityHealth(i, can);
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 300);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 500);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
	}	
}

public Action:ff(clientId) 
{
	new Handle:menu = CreateMenu(ffDevam);
	SetMenuTitle(menu, "FF Menu");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "M4A4 FF");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "M4A1-S FF");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "AK47 FF");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "AWP FF");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "DEAGLE FF");
	AddMenuItem(menu, "option6", opcionmenu);
	
	Format(opcionmenu, 124, "NOVA FF");
	AddMenuItem(menu, "option7", opcionmenu);
	
	Format(opcionmenu, 124, "BIZON FF");
	AddMenuItem(menu, "option8", opcionmenu);
	
	Format(opcionmenu, 124, "ZEUS FF");
	AddMenuItem(menu, "option9", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public ffDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : M4A4 FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_m4a1");
							Client_GiveWeaponAndAmmo(i, "weapon_m4a1", _, 0, _, 30);
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : M4A1-S FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_m4a1_silencer");
							Client_GiveWeaponAndAmmo(i, "weapon_m4a1_silencer", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : AK47 FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_ak47");
							Client_GiveWeaponAndAmmo(i, "weapon_ak47", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : AWP FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_awp");
							Client_GiveWeaponAndAmmo(i, "weapon_awp", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : DEAGLE FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_deagle");
							Client_GiveWeaponAndAmmo(i, "weapon_deagle", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option7") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : NOVA FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_nova");
							Client_GiveWeaponAndAmmo(i, "weapon_nova", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option8") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : BIZON FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_bizon");
							Client_GiveWeaponAndAmmo(i, "weapon_bizon", _, 0, _, 30);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option9") == 0 ) 
		{
			{
				CountdownActive = true;
				CountdownTimer = CreateTimer(1.0, Countdown, _, TIMER_REPEAT);
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : ZEUS FF Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							GivePlayerItem(i, "weapon_taser");
							Client_GiveWeaponAndAmmo(i, "weapon_taser", _, 0, _, 1);
						}
					}
				}
			}
		}
	}	
}

public Action:islem(clientId) 
{
	new Handle:menu = CreateMenu(islemDevam);
	SetMenuTitle(menu, "KOMUTÇU İşlem Menüsü");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "FF Ac");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "FF Kapat");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Semiclip Ac");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "Semiclip Kapat");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "Sınırsız Mermi Ac");
	AddMenuItem(menu, "option10", opcionmenu);
	
	Format(opcionmenu, 124, "Sınırsız Mermi Kapat");
	AddMenuItem(menu, "option11", opcionmenu);
	
	Format(opcionmenu, 124, "Mahkum Freeze");
	AddMenuItem(menu, "option6", opcionmenu);
	
	Format(opcionmenu, 124, "Mahkum UnFreeze");
	AddMenuItem(menu, "option7", opcionmenu);
	
	Format(opcionmenu, 124, "Mahkum Strip");
	AddMenuItem(menu, "option8", opcionmenu);
	
	Format(opcionmenu, 124, "Mahkum Bring");
	AddMenuItem(menu, "option9", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public islemDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				ServerCommand("mp_teammates_are_enemies 1");
				ServerCommand("mp_friendlyfire 1");	
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Dost Ateşi Açıldı.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				ServerCommand("mp_teammates_are_enemies 0");
				ServerCommand("mp_friendlyfire 0");	
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Dost Ateşi Kapatıldı.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				ServerCommand("sm_hosties_noblock_enable 0");
				ServerCommand("mp_solid_teammates 1");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Semiclip Açıldı.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				ServerCommand("sm_hosties_noblock_enable 1");
				ServerCommand("mp_solid_teammates 0");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Semiclip Kapatıldı.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				ServerCommand("sm_freeze @t -1");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlar Donduruldu.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option7") == 0 ) 
		{
			{
				ServerCommand("sm_freeze @t 0");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkum Dondurulmasi Kaldirildi.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option8") == 0 ) 
		{
			{
				ServerCommand("sm_strip @t");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlarin Silahlari Alindi.",isim);
					}
				}
			}
		}
		else if ( strcmp(info,"option9") == 0 ) 
		{
			{
				ServerCommand("sm_bring @t");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlar Cekildi.",isim);
					}
				}
				
			}
		}
		else if ( strcmp(info,"option10") == 0 ) 
		{
			{
				ServerCommand("sv_infinite_ammo 1");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Sınırsız Mermi Açıldı.",isim);
					}
				}
				
			}
		}
		else if ( strcmp(info,"option11") == 0 ) 
		{
			{
				ServerCommand("sv_infinite_ammo 0");
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Sınırsız Mermi Kapatıldı.",isim);
					}
				}
			}
		}
	}	
}

public Action:Hook_SetTransmit(entity, i)  
{  
	if (entity != i)  
		return Plugin_Handled; 
	
	return Plugin_Continue;  
}

public Action:RevAk0(clientId) 
{
	new Handle:menu = CreateMenu(Ak0Devam);
	SetMenuTitle(menu, "KOMUTÇU Respawn Menüsü");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Ölü Olan Oyunculari Tek Tek Revle");
	AddMenuItem(menu, "option2", opcionmenu);	
	
	Format(opcionmenu, 124, "Ölü Olan Tüm Mahkumlari Revle");
	AddMenuItem(menu, "option3", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public Ak0Devam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	decl String:game[40];
	GetGameFolderName(game, sizeof(game));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				RevAk0baba(client);
			}
		}
		
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Ölü Olan Tüm Mahkumlar Revlendi.",isim);
						
						if(GetClientTeam(i) == 3)
						{
							
						} else {
							
							
							if (StrEqual(game, "cstrike") || StrEqual(game, "csgo"))
							{
								if(!IsPlayerAlive(i)) {
									CS_RespawnPlayer(i);
								}
							}
						}
					}
				}
				
			}
		}
	}
	
}

public Action:RevAk0baba(client)
{
	new Handle:menu = CreateMenu(MenuHandler_Players);
	
	decl String:title[100];
	Format(title, sizeof(title), "Canlandırılacak Oyuncu Seç:");
	SetMenuTitle(menu, title);
	SetMenuExitBackButton(menu, true);
	
	AddTargetsToMenu2(menu, client, COMMAND_FILTER_NO_IMMUNITY | COMMAND_FILTER_DEAD);
	
	DisplayMenu(menu, client, MENU_TIME_FOREVER);
}

public MenuHandler_Players(Handle:menu, MenuAction:action, param1, param2)
{
	if (action == MenuAction_End)
	{
		CloseHandle(menu);
		
	}
	else if (action == MenuAction_Cancel)
	{
		
		CPrintToChat(param1, " \x02[Only Fun]\x04 Ölü Oyuncu Yok !");
		
		if (param2 == MenuCancel_ExitBack && hAdminMenu != INVALID_HANDLE)
		{
			DisplayTopMenu(hAdminMenu, param1, TopMenuPosition_LastCategory);
		}
	}
	else if (action == MenuAction_Select)
	{
		
		decl String:info[32];
		new userid, target;
		
		GetMenuItem(menu, param2, info, sizeof(info));
		userid = StringToInt(info);
		
		if ((target = GetClientOfUserId(userid)) == 0)
		{
			CPrintToChat(param1, " \x02[Only Fun] %t", "Mevcut Oyuncu Bulunamadi.");
		}
		else if (!CanUserTarget(param1, target))
		{
			new String:name[32];
			GetClientName(target, name, sizeof(name));
			new String:isim[32];
			GetClientName(param1, isim, sizeof(isim));
			
			RespawnPlayer(param1, target);
			RevAk0baba(param1);
			for (int i = 1; i <= MaxClients; i++)
			{
				if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
					CPrintToChat(i," \x02[Only Fun] %s : \x04%s isimli oyuncu revlendi.",isim, name);
				}
			}
			
		} else {
			new String:name[32];
			GetClientName(target, name, sizeof(name));
			new String:isim[32];
			GetClientName(param1, isim, sizeof(isim));
			
			RespawnPlayer(param1, target);
			RevAk0baba(param1);
			for (int i = 1; i <= MaxClients; i++)
			{
				if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
					CPrintToChat(i," \x02[Only Fun] %s : \x04%s isimli oyuncu revlendi.",isim, name);
				}
			}
		}
		
	}
}

public RespawnPlayer(client, target)
{
	decl String:game[40];
	GetGameFolderName(game, sizeof(game));
	
	if (StrEqual(game, "cstrike") || StrEqual(game, "csgo"))
	{
		CS_RespawnPlayer(target);
	}
}

public Action:GlowMenu(clientId) 
{
	new Handle:menu = CreateMenu(GlowDevam);
	SetMenuTitle(menu, "GlowMenu Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "KOMUTÇU Glow");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "MAHKUM Glow");
	AddMenuItem(menu, "option3", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public GlowDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				GardiyanGlow(client);				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				MahkumGlow(client);
			}
		}
		
	}
} 

public Action:GardiyanGlow(clientId) 
{
	new Handle:menu = CreateMenu(GardiyanGlowDevam);
	SetMenuTitle(menu, "Gardiyan Glow Menu Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Kirmizi Glow");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Mavi Glow");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Yesil Glow");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "Sari Glow");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "Turkuaz Glow");
	AddMenuItem(menu, "option6", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public GardiyanGlowDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Gardiyanlara Kirmizi Glow Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Gardiyanlara Mavi Glow Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 0, 0, 255, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Gardiyanlara Yesil Glow Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 0, 128, 0, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Gardiyanlara Sari Glow Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 255, 255, 0, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Gardiyanlara Turkuaz Glow Açıldı.",isim);
						if(GetClientTeam(i) == 3)
						{
							SetEntityRenderColor(i, 0, 255, 255, 255);	
						}
					}
				}
				
			}
		}
		
	}
} 

public Action:MahkumGlow(clientId) 
{
	new Handle:menu = CreateMenu(MahkumGlowDevam);
	SetMenuTitle(menu, "Mahkum Glow Menu Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "Kirmizi Glow");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "Mavi Glow");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "Yesil Glow");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "Sari Glow");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "Turkuaz Glow");
	AddMenuItem(menu, "option6", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public MahkumGlowDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlara Kirmizi Glow Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							SetEntityRenderColor(i, 255, 0, 0, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlara Mavi Glow Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							SetEntityRenderColor(i, 0, 0, 255, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlara Yesil Glow Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							SetEntityRenderColor(i, 0, 128, 0, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlara Sari Glow Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							SetEntityRenderColor(i, 255, 255, 0, 255);	
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Mahkumlara Turkuaz Glow Açıldı.",isim);
						if(GetClientTeam(i) == 2)
						{
							SetEntityRenderColor(i, 0, 255, 255, 255);	
						}
					}
				}
			}
		}
	}
} 

public Action:Countdown(Handle timer)
{
	static int numPrinted = 0;
	int timeleft = 45 - numPrinted;
	PrintCenterTextAll("<font color='#00FFFF'>FF</font> <font color='#00FF00'>%d</font> <font color='#00FFFF'>saniye sonra açılacak!</font>", timeleft);
	if(timeleft <= 10)
		PrintToChatAll(" \x02[Only Fun] \x10FF \x04%i \x10saniye sonra açılacak!", timeleft);
	if(timeleft == 0)
	{
		PrintToChatAll(" \x02[Only Fun] \x04FF açılmıştır, Bol Şans!");
		PrintCenterTextAll("<font color='#00FF00'>FF açılmıştır,</font> <font color='#00FFFF'>Bol Şans!</font>");
		numPrinted = 0;
		FFBaslat();
		return Plugin_Stop;
	}
	
	numPrinted++;
	
	return Plugin_Continue;
}

public FFBaslat()
{
	g_cvFriendlyFire.IntValue = 1;
	PrintToChatAll(" \x02[Only Fun] \x04FF açılmıştır, Bol Şans!");
	CountdownActive = false;
	ffAktif = true;
	CountdownTimer = null;
}

public OnTouch(client, other)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	decl String:isim2[32];
	GetClientName(other, isim2, sizeof(isim2));
	
	if( client > 0 && client < MaxClients + 1 &&  other > 0 && other < MaxClients + 1 )
	{
		if(GetClientTeam(client) == 2 && GetClientTeam(other) == 3)
		{
			ForcePlayerSuicide(client);
			PrintToChatAll("Değen Kişi: %s | Ölen Kişi: %s", isim2, isim);
		}
	}
}

public Action:Catismash(clientId) 
{
	new Handle:menu = CreateMenu(CatismaDevam);
	SetMenuTitle(menu, "Çatışma HP Ayari");
	decl String:opcionmenu[124];
	
	Format(opcionmenu, 124, "300 HP");
	AddMenuItem(menu, "option2", opcionmenu);
	
	Format(opcionmenu, 124, "500 HP");
	AddMenuItem(menu, "option3", opcionmenu);
	
	Format(opcionmenu, 124, "700 HP");
	AddMenuItem(menu, "option4", opcionmenu);
	
	Format(opcionmenu, 124, "1000 HP");
	AddMenuItem(menu, "option5", opcionmenu);
	
	Format(opcionmenu, 124, "2000 HP");
	AddMenuItem(menu, "option6", opcionmenu);
	
	SetMenuExitButton(menu, true);
	DisplayMenu(menu, clientId, MENU_TIME_FOREVER);
	
	return Plugin_Handled;
}

public CatismaDevam(Handle:menu, MenuAction:action, client, itemNum)
{
	decl String:isim[32];
	GetClientName(client, isim, sizeof(isim));
	
	if ( action == MenuAction_Select ) 
	{
		new String:info[32];
		
		GetMenuItem(menu, itemNum, info, sizeof(info));
		
		if ( strcmp(info,"option2") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Çatışma AKTİF GADRIYANLAR'a 300HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 300);
							SetEntityHealth(i, can);
						}
					}
				}
				
			}
		}
		else if ( strcmp(info,"option3") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Çatışma AKTİF GADRIYANLAR'a 500HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 500);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option4") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Çatışma AKTİF GADRIYANLAR'a 700HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 700);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option5") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Çatışma AKTİF GADRIYANLAR'a 1000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 1000);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
		else if ( strcmp(info,"option6") == 0 ) 
		{
			{
				for (int i = 1; i <= MaxClients; i++)
				{
					ServerCommand("sv_infinite_ammo 1");
					if(i && IsClientInGame(i) && IsClientConnected(i) && !IsFakeClient(i))   {
						CPrintToChat(i," \x02[Only Fun] \x04%s : Çatışma AKTİF GADRIYANLAR'a 2000HP Verildi.",isim);
						if(GetClientTeam(i) == 3)
						{
							new can = (GetClientHealth(i) , 2000);
							SetEntityHealth(i, can);
						}
					}
				}
			}
		}
	}
}